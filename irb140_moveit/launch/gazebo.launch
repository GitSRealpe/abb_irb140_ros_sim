<?xml version="1.0"?>
<launch>
  <arg name="paused" default="true"/>
  <arg name="gazebo_gui" default="true"/>

  <!-- startup simulated world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" default="worlds/empty.world"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
    <arg name="verbose" value="true"/>
  </include>

  <!--include file="$(find irb140_moveit)/launch/ros_controllers.launch"/-->

  <!--Cargar robot-->
		<param name="robot_description" command="$(find xacro)/xacro --inorder '$(find irb140_sim)/urdf/irb140.xacro'" />
		<arg name="x" default="0"/>
		<arg name="y" default="0"/>
		<arg name="z" default="0"/>

		<!--spawnear robot-->
		<node name="irb140_gazebo" pkg="gazebo_ros" type="spawn_model" output="screen"
					args="-urdf -param robot_description -model irb_140 -x $(arg x) -y $(arg y) -z $(arg z)"/>

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find irb140_moveit)/config/ros_controllers.yaml" command="load"/>

		<!--Controladores-->
		<node name="controller_spawner" pkg="controller_manager" type="spawner"
					respawn="false" output="screen" ns="/irb140_arm"
					args="--namespace=/irb140_arm
          joint_state_controller
          arm_controller"/>

		<!-- convert joint states to TF transforms for rviz, etc -->
		<node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
			respawn="false" output="screen">
			<remap from="/joint_states" to="/irb_140/joint_states" />
		</node>

</launch>
