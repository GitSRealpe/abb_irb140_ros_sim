<launch>
  <!-- By default, we are not in debug mode -->
  <arg name="debug" default="false" />

	<param name="robot_description" command="$(find xacro)/xacro '$(find irb140_sim)/urdf/irb140.xacro'"/>
  <arg name="use_gui" default="false" />
  <!-- Load the URDF, SRDF and other .yaml configuration files on the param server -->
  <include file="$(find irb140_moveit_bin_pick)/launch/planning_context.launch">
    <arg name="load_robot_description" value="false"/>
  </include>

  <!-- If needed, broadcast static tf for robot root -->

  <!-- load joint states topic for moveit interface -->
  <!-- We do not have a robot connected, so publish fake joint states -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" unless="$(arg use_gui)">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="joint_state_publisher" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" if="$(arg use_gui)">
    <rosparam param="source_list">[move_group/fake_controller_joint_states]</rosparam>
  </node>
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="true" output="screen" />

  <!-- Run the main MoveIt! executable without trajectory execution (we do not have controllers configured by default) -->
  <!-- specify the planning pipeline -->
  <arg name="pipeline" default="ompl" />

  <include file="$(find irb140_moveit_bin_pick)/launch/move_group.launch">
    <arg name="allow_trajectory_execution" value="true"/>
    <arg name="fake_execution" value="true"/>
    <arg name="info" value="true"/>
    <arg name="debug" value="$(arg debug)"/>
    <arg name="pipeline" value="$(arg pipeline)"/>
    <arg name="load_robot_description" value="false"/>
  </include>

  <!-- Show in Rviz -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find irb140_commander)/config/cfg_rviz_commander.rviz"/>

  <node pkg="irb140_commander" type="joint_commander" name="joint_commander" output="screen"/>
  <node pkg="irb140_commander" type="pose_commander" name="pose_commander" output="screen"/>
  <node pkg="irb140_commander" type="path_commander" name="path_commander" output="screen"/>

</launch>
